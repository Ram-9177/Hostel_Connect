name: Deploy GitHub Pages

on:
  push:
    branches: [ main ]
    paths:
      - 'docs/**'
      - '.github/workflows/pages-site.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-deploy
  cancel-in-progress: false

jobs:
  build:
    name: Build Documentation Site
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Build documentation site
        run: |
          mkdir -p _site
          cp -r docs/* _site/
          
          # Create index.html if it doesn't exist
          if [ ! -f _site/index.html ]; then
            cat > _site/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>HostelConnect Documentation</title>
              <style>
                  * { margin: 0; padding: 0; box-sizing: border-box; }
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
                      line-height: 1.6;
                      color: #333;
                      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                      min-height: 100vh;
                      padding: 20px;
                  }
                  .container {
                      max-width: 1200px;
                      margin: 0 auto;
                      background: white;
                      border-radius: 12px;
                      box-shadow: 0 20px 60px rgba(0,0,0,0.3);
                      padding: 40px;
                  }
                  h1 { color: #667eea; margin-bottom: 10px; }
                  .subtitle { color: #666; margin-bottom: 40px; }
                  .grid {
                      display: grid;
                      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                      gap: 20px;
                      margin-top: 40px;
                  }
                  .card {
                      border: 2px solid #eee;
                      border-radius: 8px;
                      padding: 24px;
                      transition: all 0.3s;
                  }
                  .card:hover {
                      border-color: #667eea;
                      transform: translateY(-4px);
                      box-shadow: 0 8px 16px rgba(102, 126, 234, 0.2);
                  }
                  .card h3 { color: #667eea; margin-bottom: 12px; }
                  .card p { color: #666; margin-bottom: 16px; }
                  .card a {
                      color: #667eea;
                      text-decoration: none;
                      font-weight: 600;
                  }
                  .card a:hover { text-decoration: underline; }
              </style>
          </head>
          <body>
              <div class="container">
                  <h1>🏢 HostelConnect Documentation</h1>
                  <p class="subtitle">Comprehensive guides for deployment, development, and administration</p>
                  
                  <div class="grid">
                      <div class="card">
                          <h3>📚 Getting Started</h3>
                          <p>Learn how to set up HostelConnect with GitHub Student Pack benefits</p>
                          <a href="STUDENT_PACK_SETUP.md">Read Guide →</a>
                      </div>
                      
                      <div class="card">
                          <h3>🔐 Security & Secrets</h3>
                          <p>How to securely manage Firebase credentials and API keys</p>
                          <a href="SECRETS.md">View Instructions →</a>
                      </div>
                      
                      <div class="card">
                          <h3>🚀 CI/CD Pipelines</h3>
                          <p>Automated workflows for Flutter builds and Firebase deployments</p>
                          <a href="CI_PIPELINES.md">Explore Workflows →</a>
                      </div>
                      
                      <div class="card">
                          <h3>🔥 Firebase Functions</h3>
                          <p>Deploy serverless functions with service account authentication</p>
                          <a href="FIREBASE_FUNCTIONS.md">Setup Guide →</a>
                      </div>
                      
                      <div class="card">
                          <h3>📖 Runbook</h3>
                          <p>Step-by-step deployment from 1 → n colleges</p>
                          <a href="RUNBOOK.md">Follow Steps →</a>
                      </div>
                      
                      <div class="card">
                          <h3>👨‍💼 Admin Guide</h3>
                          <p>Manage students, rooms, and announcements</p>
                          <a href="ADMIN_GUIDE.md">Admin Docs →</a>
                      </div>
                      
                      <div class="card">
                          <h3>📦 Feature Modules</h3>
                          <p>Database schemas, API endpoints, and topic patterns</p>
                          <a href="MODULES.md">View Schemas →</a>
                      </div>
                      
                      <div class="card">
                          <h3>💰 Cost Guardrails</h3>
                          <p>Optimize Firebase usage and stay within free tier</p>
                          <a href="COST_GUARDRAILS.md">Best Practices →</a>
                      </div>
                  </div>
              </div>
          </body>
          </html>
          EOF
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment summary
        run: |
          echo "### 📄 GitHub Pages Deployed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **URL:** ${{ steps.deployment.outputs.page_url }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Deployed at:** $(date -u)" >> $GITHUB_STEP_SUMMARY
